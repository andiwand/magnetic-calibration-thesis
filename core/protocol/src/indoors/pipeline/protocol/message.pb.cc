// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: indoors/pipeline/protocol/message.proto

#include "indoors/pipeline/protocol/message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Bye;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Clock;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector3;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Void;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_ChannelHello;
}  // namespace protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto
namespace indoors {
namespace pipeline {
namespace protocol {
class HelloDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Hello>
      _instance;
} _Hello_default_instance_;
class ByeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Bye>
      _instance;
} _Bye_default_instance_;
class ChannelHelloDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChannelHello>
      _instance;
} _ChannelHello_default_instance_;
class EventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Event>
      _instance;
  const ::indoors::pipeline::protocol::Hello* hello_;
  const ::indoors::pipeline::protocol::Bye* bye_;
  const ::indoors::pipeline::protocol::Void* void__;
  bool switch__;
  double scalar_;
  const ::indoors::pipeline::protocol::Clock* clock_;
  const ::indoors::pipeline::protocol::Vector3* vector3_;
} _Event_default_instance_;
class VoidDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Void>
      _instance;
} _Void_default_instance_;
class ClockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Clock>
      _instance;
} _Clock_default_instance_;
class Vector3DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector3>
      _instance;
} _Vector3_default_instance_;
}  // namespace protocol
}  // namespace pipeline
}  // namespace indoors
namespace protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto {
static void InitDefaultsBye() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::indoors::pipeline::protocol::_Bye_default_instance_;
    new (ptr) ::indoors::pipeline::protocol::Bye();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::indoors::pipeline::protocol::Bye::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Bye =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBye}, {}};

static void InitDefaultsChannelHello() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::indoors::pipeline::protocol::_Hello_default_instance_;
    new (ptr) ::indoors::pipeline::protocol::Hello();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::indoors::pipeline::protocol::_ChannelHello_default_instance_;
    new (ptr) ::indoors::pipeline::protocol::ChannelHello();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::indoors::pipeline::protocol::_Event_default_instance_;
    new (ptr) ::indoors::pipeline::protocol::Event();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::indoors::pipeline::protocol::Hello::InitAsDefaultInstance();
  ::indoors::pipeline::protocol::ChannelHello::InitAsDefaultInstance();
  ::indoors::pipeline::protocol::Event::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_ChannelHello =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsChannelHello}, {
      &protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::scc_info_Bye.base,
      &protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::scc_info_Void.base,
      &protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::scc_info_Clock.base,
      &protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::scc_info_Vector3.base,}};

static void InitDefaultsVoid() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::indoors::pipeline::protocol::_Void_default_instance_;
    new (ptr) ::indoors::pipeline::protocol::Void();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::indoors::pipeline::protocol::Void::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Void =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVoid}, {}};

static void InitDefaultsClock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::indoors::pipeline::protocol::_Clock_default_instance_;
    new (ptr) ::indoors::pipeline::protocol::Clock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::indoors::pipeline::protocol::Clock::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Clock =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClock}, {}};

static void InitDefaultsVector3() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::indoors::pipeline::protocol::_Vector3_default_instance_;
    new (ptr) ::indoors::pipeline::protocol::Vector3();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::indoors::pipeline::protocol::Vector3::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vector3 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVector3}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Bye.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChannelHello.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Void.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Clock.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vector3.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::Hello, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::Hello, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::Hello, channels_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::Bye, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::ChannelHello, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::ChannelHello, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::ChannelHello, annotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::ChannelHello, eventexample_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::Event, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::Event, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::Event, t_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::Event, channel_),
  offsetof(::indoors::pipeline::protocol::EventDefaultTypeInternal, hello_),
  offsetof(::indoors::pipeline::protocol::EventDefaultTypeInternal, bye_),
  offsetof(::indoors::pipeline::protocol::EventDefaultTypeInternal, void__),
  offsetof(::indoors::pipeline::protocol::EventDefaultTypeInternal, switch__),
  offsetof(::indoors::pipeline::protocol::EventDefaultTypeInternal, scalar_),
  offsetof(::indoors::pipeline::protocol::EventDefaultTypeInternal, clock_),
  offsetof(::indoors::pipeline::protocol::EventDefaultTypeInternal, vector3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::Event, __),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::Void, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::Clock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::Clock, unix_utc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::Vector3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::Vector3, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::Vector3, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::indoors::pipeline::protocol::Vector3, z_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::indoors::pipeline::protocol::Hello)},
  { 7, -1, sizeof(::indoors::pipeline::protocol::Bye)},
  { 12, -1, sizeof(::indoors::pipeline::protocol::ChannelHello)},
  { 20, -1, sizeof(::indoors::pipeline::protocol::Event)},
  { 35, -1, sizeof(::indoors::pipeline::protocol::Void)},
  { 40, -1, sizeof(::indoors::pipeline::protocol::Clock)},
  { 46, -1, sizeof(::indoors::pipeline::protocol::Vector3)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::indoors::pipeline::protocol::_Hello_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::indoors::pipeline::protocol::_Bye_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::indoors::pipeline::protocol::_ChannelHello_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::indoors::pipeline::protocol::_Event_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::indoors::pipeline::protocol::_Void_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::indoors::pipeline::protocol::_Clock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::indoors::pipeline::protocol::_Vector3_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "indoors/pipeline/protocol/message.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\'indoors/pipeline/protocol/message.prot"
      "o\022\031indoors.pipeline.protocol\"P\n\005Hello\022\014\n"
      "\004from\030\001 \001(\t\0229\n\010channels\030\002 \003(\0132\'.indoors."
      "pipeline.protocol.ChannelHello\"\005\n\003Bye\"k\n"
      "\014ChannelHello\022\017\n\007channel\030\001 \001(\r\022\022\n\nannota"
      "tion\030\002 \001(\t\0226\n\014eventExample\030\003 \001(\0132 .indoo"
      "rs.pipeline.protocol.Event\"\311\002\n\005Event\022\t\n\001"
      "t\030\001 \001(\001\022\017\n\007channel\030\002 \001(\r\0221\n\005hello\030\003 \001(\0132"
      " .indoors.pipeline.protocol.HelloH\000\022-\n\003b"
      "ye\030\004 \001(\0132\036.indoors.pipeline.protocol.Bye"
      "H\000\022/\n\004void\030\005 \001(\0132\037.indoors.pipeline.prot"
      "ocol.VoidH\000\022\020\n\006switch\030\006 \001(\010H\000\022\020\n\006scalar\030"
      "\007 \001(\001H\000\0221\n\005clock\030\010 \001(\0132 .indoors.pipelin"
      "e.protocol.ClockH\000\0225\n\007vector3\030\t \001(\0132\".in"
      "doors.pipeline.protocol.Vector3H\000B\003\n\001_\"\006"
      "\n\004Void\"\031\n\005Clock\022\020\n\010unix_utc\030\001 \001(\001\"*\n\007Vec"
      "tor3\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001b\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 685);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "indoors/pipeline/protocol/message.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto
namespace indoors {
namespace pipeline {
namespace protocol {

// ===================================================================

void Hello::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Hello::kFromFieldNumber;
const int Hello::kChannelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Hello::Hello()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::scc_info_ChannelHello.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:indoors.pipeline.protocol.Hello)
}
Hello::Hello(const Hello& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channels_(from.channels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  // @@protoc_insertion_point(copy_constructor:indoors.pipeline.protocol.Hello)
}

void Hello::SharedCtor() {
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Hello::~Hello() {
  // @@protoc_insertion_point(destructor:indoors.pipeline.protocol.Hello)
  SharedDtor();
}

void Hello::SharedDtor() {
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Hello::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Hello::descriptor() {
  ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Hello& Hello::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::scc_info_ChannelHello.base);
  return *internal_default_instance();
}


void Hello::Clear() {
// @@protoc_insertion_point(message_clear_start:indoors.pipeline.protocol.Hello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channels_.Clear();
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Hello::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:indoors.pipeline.protocol.Hello)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "indoors.pipeline.protocol.Hello.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .indoors.pipeline.protocol.ChannelHello channels = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_channels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:indoors.pipeline.protocol.Hello)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:indoors.pipeline.protocol.Hello)
  return false;
#undef DO_
}

void Hello::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:indoors.pipeline.protocol.Hello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "indoors.pipeline.protocol.Hello.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from(), output);
  }

  // repeated .indoors.pipeline.protocol.ChannelHello channels = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->channels(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:indoors.pipeline.protocol.Hello)
}

::google::protobuf::uint8* Hello::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:indoors.pipeline.protocol.Hello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "indoors.pipeline.protocol.Hello.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from(), target);
  }

  // repeated .indoors.pipeline.protocol.ChannelHello channels = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->channels(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:indoors.pipeline.protocol.Hello)
  return target;
}

size_t Hello::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:indoors.pipeline.protocol.Hello)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .indoors.pipeline.protocol.ChannelHello channels = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->channels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channels(static_cast<int>(i)));
    }
  }

  // string from = 1;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Hello::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:indoors.pipeline.protocol.Hello)
  GOOGLE_DCHECK_NE(&from, this);
  const Hello* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Hello>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:indoors.pipeline.protocol.Hello)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:indoors.pipeline.protocol.Hello)
    MergeFrom(*source);
  }
}

void Hello::MergeFrom(const Hello& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:indoors.pipeline.protocol.Hello)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channels_.MergeFrom(from.channels_);
  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
}

void Hello::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:indoors.pipeline.protocol.Hello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Hello::CopyFrom(const Hello& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:indoors.pipeline.protocol.Hello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hello::IsInitialized() const {
  return true;
}

void Hello::Swap(Hello* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Hello::InternalSwap(Hello* other) {
  using std::swap;
  CastToBase(&channels_)->InternalSwap(CastToBase(&other->channels_));
  from_.Swap(&other->from_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Hello::GetMetadata() const {
  protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Bye::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bye::Bye()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::scc_info_Bye.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:indoors.pipeline.protocol.Bye)
}
Bye::Bye(const Bye& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:indoors.pipeline.protocol.Bye)
}

void Bye::SharedCtor() {
}

Bye::~Bye() {
  // @@protoc_insertion_point(destructor:indoors.pipeline.protocol.Bye)
  SharedDtor();
}

void Bye::SharedDtor() {
}

void Bye::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Bye::descriptor() {
  ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bye& Bye::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::scc_info_Bye.base);
  return *internal_default_instance();
}


void Bye::Clear() {
// @@protoc_insertion_point(message_clear_start:indoors.pipeline.protocol.Bye)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Bye::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:indoors.pipeline.protocol.Bye)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:indoors.pipeline.protocol.Bye)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:indoors.pipeline.protocol.Bye)
  return false;
#undef DO_
}

void Bye::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:indoors.pipeline.protocol.Bye)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:indoors.pipeline.protocol.Bye)
}

::google::protobuf::uint8* Bye::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:indoors.pipeline.protocol.Bye)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:indoors.pipeline.protocol.Bye)
  return target;
}

size_t Bye::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:indoors.pipeline.protocol.Bye)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Bye::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:indoors.pipeline.protocol.Bye)
  GOOGLE_DCHECK_NE(&from, this);
  const Bye* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bye>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:indoors.pipeline.protocol.Bye)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:indoors.pipeline.protocol.Bye)
    MergeFrom(*source);
  }
}

void Bye::MergeFrom(const Bye& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:indoors.pipeline.protocol.Bye)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Bye::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:indoors.pipeline.protocol.Bye)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bye::CopyFrom(const Bye& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:indoors.pipeline.protocol.Bye)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bye::IsInitialized() const {
  return true;
}

void Bye::Swap(Bye* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bye::InternalSwap(Bye* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Bye::GetMetadata() const {
  protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChannelHello::InitAsDefaultInstance() {
  ::indoors::pipeline::protocol::_ChannelHello_default_instance_._instance.get_mutable()->eventexample_ = const_cast< ::indoors::pipeline::protocol::Event*>(
      ::indoors::pipeline::protocol::Event::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChannelHello::kChannelFieldNumber;
const int ChannelHello::kAnnotationFieldNumber;
const int ChannelHello::kEventExampleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChannelHello::ChannelHello()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::scc_info_ChannelHello.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:indoors.pipeline.protocol.ChannelHello)
}
ChannelHello::ChannelHello(const ChannelHello& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  annotation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.annotation().size() > 0) {
    annotation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.annotation_);
  }
  if (from.has_eventexample()) {
    eventexample_ = new ::indoors::pipeline::protocol::Event(*from.eventexample_);
  } else {
    eventexample_ = NULL;
  }
  channel_ = from.channel_;
  // @@protoc_insertion_point(copy_constructor:indoors.pipeline.protocol.ChannelHello)
}

void ChannelHello::SharedCtor() {
  annotation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&eventexample_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&eventexample_)) + sizeof(channel_));
}

ChannelHello::~ChannelHello() {
  // @@protoc_insertion_point(destructor:indoors.pipeline.protocol.ChannelHello)
  SharedDtor();
}

void ChannelHello::SharedDtor() {
  annotation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete eventexample_;
}

void ChannelHello::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChannelHello::descriptor() {
  ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChannelHello& ChannelHello::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::scc_info_ChannelHello.base);
  return *internal_default_instance();
}


void ChannelHello::Clear() {
// @@protoc_insertion_point(message_clear_start:indoors.pipeline.protocol.ChannelHello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  annotation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && eventexample_ != NULL) {
    delete eventexample_;
  }
  eventexample_ = NULL;
  channel_ = 0u;
  _internal_metadata_.Clear();
}

bool ChannelHello::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:indoors.pipeline.protocol.ChannelHello)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string annotation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_annotation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->annotation().data(), static_cast<int>(this->annotation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "indoors.pipeline.protocol.ChannelHello.annotation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .indoors.pipeline.protocol.Event eventExample = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_eventexample()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:indoors.pipeline.protocol.ChannelHello)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:indoors.pipeline.protocol.ChannelHello)
  return false;
#undef DO_
}

void ChannelHello::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:indoors.pipeline.protocol.ChannelHello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel = 1;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->channel(), output);
  }

  // string annotation = 2;
  if (this->annotation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotation().data(), static_cast<int>(this->annotation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "indoors.pipeline.protocol.ChannelHello.annotation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->annotation(), output);
  }

  // .indoors.pipeline.protocol.Event eventExample = 3;
  if (this->has_eventexample()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_eventexample(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:indoors.pipeline.protocol.ChannelHello)
}

::google::protobuf::uint8* ChannelHello::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:indoors.pipeline.protocol.ChannelHello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel = 1;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->channel(), target);
  }

  // string annotation = 2;
  if (this->annotation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotation().data(), static_cast<int>(this->annotation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "indoors.pipeline.protocol.ChannelHello.annotation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->annotation(), target);
  }

  // .indoors.pipeline.protocol.Event eventExample = 3;
  if (this->has_eventexample()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_eventexample(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:indoors.pipeline.protocol.ChannelHello)
  return target;
}

size_t ChannelHello::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:indoors.pipeline.protocol.ChannelHello)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string annotation = 2;
  if (this->annotation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->annotation());
  }

  // .indoors.pipeline.protocol.Event eventExample = 3;
  if (this->has_eventexample()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *eventexample_);
  }

  // uint32 channel = 1;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChannelHello::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:indoors.pipeline.protocol.ChannelHello)
  GOOGLE_DCHECK_NE(&from, this);
  const ChannelHello* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChannelHello>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:indoors.pipeline.protocol.ChannelHello)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:indoors.pipeline.protocol.ChannelHello)
    MergeFrom(*source);
  }
}

void ChannelHello::MergeFrom(const ChannelHello& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:indoors.pipeline.protocol.ChannelHello)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.annotation().size() > 0) {

    annotation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.annotation_);
  }
  if (from.has_eventexample()) {
    mutable_eventexample()->::indoors::pipeline::protocol::Event::MergeFrom(from.eventexample());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void ChannelHello::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:indoors.pipeline.protocol.ChannelHello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChannelHello::CopyFrom(const ChannelHello& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:indoors.pipeline.protocol.ChannelHello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChannelHello::IsInitialized() const {
  return true;
}

void ChannelHello::Swap(ChannelHello* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChannelHello::InternalSwap(ChannelHello* other) {
  using std::swap;
  annotation_.Swap(&other->annotation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(eventexample_, other->eventexample_);
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChannelHello::GetMetadata() const {
  protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Event::InitAsDefaultInstance() {
  ::indoors::pipeline::protocol::_Event_default_instance_.hello_ = const_cast< ::indoors::pipeline::protocol::Hello*>(
      ::indoors::pipeline::protocol::Hello::internal_default_instance());
  ::indoors::pipeline::protocol::_Event_default_instance_.bye_ = const_cast< ::indoors::pipeline::protocol::Bye*>(
      ::indoors::pipeline::protocol::Bye::internal_default_instance());
  ::indoors::pipeline::protocol::_Event_default_instance_.void__ = const_cast< ::indoors::pipeline::protocol::Void*>(
      ::indoors::pipeline::protocol::Void::internal_default_instance());
  ::indoors::pipeline::protocol::_Event_default_instance_.switch__ = false;
  ::indoors::pipeline::protocol::_Event_default_instance_.scalar_ = 0;
  ::indoors::pipeline::protocol::_Event_default_instance_.clock_ = const_cast< ::indoors::pipeline::protocol::Clock*>(
      ::indoors::pipeline::protocol::Clock::internal_default_instance());
  ::indoors::pipeline::protocol::_Event_default_instance_.vector3_ = const_cast< ::indoors::pipeline::protocol::Vector3*>(
      ::indoors::pipeline::protocol::Vector3::internal_default_instance());
}
void Event::set_allocated_hello(::indoors::pipeline::protocol::Hello* hello) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear__();
  if (hello) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hello = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hello, submessage_arena);
    }
    set_has_hello();
    __.hello_ = hello;
  }
  // @@protoc_insertion_point(field_set_allocated:indoors.pipeline.protocol.Event.hello)
}
void Event::set_allocated_bye(::indoors::pipeline::protocol::Bye* bye) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear__();
  if (bye) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bye = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bye, submessage_arena);
    }
    set_has_bye();
    __.bye_ = bye;
  }
  // @@protoc_insertion_point(field_set_allocated:indoors.pipeline.protocol.Event.bye)
}
void Event::set_allocated_void_(::indoors::pipeline::protocol::Void* void_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear__();
  if (void_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      void_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, void_, submessage_arena);
    }
    set_has_void_();
    __.void__ = void_;
  }
  // @@protoc_insertion_point(field_set_allocated:indoors.pipeline.protocol.Event.void)
}
void Event::set_allocated_clock(::indoors::pipeline::protocol::Clock* clock) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear__();
  if (clock) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      clock = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clock, submessage_arena);
    }
    set_has_clock();
    __.clock_ = clock;
  }
  // @@protoc_insertion_point(field_set_allocated:indoors.pipeline.protocol.Event.clock)
}
void Event::set_allocated_vector3(::indoors::pipeline::protocol::Vector3* vector3) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear__();
  if (vector3) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vector3 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vector3, submessage_arena);
    }
    set_has_vector3();
    __.vector3_ = vector3;
  }
  // @@protoc_insertion_point(field_set_allocated:indoors.pipeline.protocol.Event.vector3)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kTFieldNumber;
const int Event::kChannelFieldNumber;
const int Event::kHelloFieldNumber;
const int Event::kByeFieldNumber;
const int Event::kVoidFieldNumber;
const int Event::kSwitchFieldNumber;
const int Event::kScalarFieldNumber;
const int Event::kClockFieldNumber;
const int Event::kVector3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::scc_info_ChannelHello.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:indoors.pipeline.protocol.Event)
}
Event::Event(const Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&t_, &from.t_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&t_)) + sizeof(channel_));
  clear_has__();
  switch (from.__case()) {
    case kHello: {
      mutable_hello()->::indoors::pipeline::protocol::Hello::MergeFrom(from.hello());
      break;
    }
    case kBye: {
      mutable_bye()->::indoors::pipeline::protocol::Bye::MergeFrom(from.bye());
      break;
    }
    case kVoid: {
      mutable_void_()->::indoors::pipeline::protocol::Void::MergeFrom(from.void_());
      break;
    }
    case kSwitch: {
      set_switch_(from.switch_());
      break;
    }
    case kScalar: {
      set_scalar(from.scalar());
      break;
    }
    case kClock: {
      mutable_clock()->::indoors::pipeline::protocol::Clock::MergeFrom(from.clock());
      break;
    }
    case kVector3: {
      mutable_vector3()->::indoors::pipeline::protocol::Vector3::MergeFrom(from.vector3());
      break;
    }
    case __NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:indoors.pipeline.protocol.Event)
}

void Event::SharedCtor() {
  ::memset(&t_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&t_)) + sizeof(channel_));
  clear_has__();
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:indoors.pipeline.protocol.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  if (has__()) {
    clear__();
  }
}

void Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Event::descriptor() {
  ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Event& Event::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::scc_info_ChannelHello.base);
  return *internal_default_instance();
}


void Event::clear__() {
// @@protoc_insertion_point(one_of_clear_start:indoors.pipeline.protocol.Event)
  switch (__case()) {
    case kHello: {
      delete __.hello_;
      break;
    }
    case kBye: {
      delete __.bye_;
      break;
    }
    case kVoid: {
      delete __.void__;
      break;
    }
    case kSwitch: {
      // No need to clear
      break;
    }
    case kScalar: {
      // No need to clear
      break;
    }
    case kClock: {
      delete __.clock_;
      break;
    }
    case kVector3: {
      delete __.vector3_;
      break;
    }
    case __NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = __NOT_SET;
}


void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:indoors.pipeline.protocol.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&t_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&t_)) + sizeof(channel_));
  clear__();
  _internal_metadata_.Clear();
}

bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:indoors.pipeline.protocol.Event)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double t = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &t_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .indoors.pipeline.protocol.Hello hello = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hello()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .indoors.pipeline.protocol.Bye bye = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bye()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .indoors.pipeline.protocol.Void void = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_void_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool switch = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          clear__();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &__.switch__)));
          set_has_switch_();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double scalar = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          clear__();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &__.scalar_)));
          set_has_scalar();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .indoors.pipeline.protocol.Clock clock = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clock()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .indoors.pipeline.protocol.Vector3 vector3 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vector3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:indoors.pipeline.protocol.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:indoors.pipeline.protocol.Event)
  return false;
#undef DO_
}

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:indoors.pipeline.protocol.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double t = 1;
  if (this->t() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->t(), output);
  }

  // uint32 channel = 2;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->channel(), output);
  }

  // .indoors.pipeline.protocol.Hello hello = 3;
  if (has_hello()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_hello(), output);
  }

  // .indoors.pipeline.protocol.Bye bye = 4;
  if (has_bye()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_bye(), output);
  }

  // .indoors.pipeline.protocol.Void void = 5;
  if (has_void_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_void_(), output);
  }

  // bool switch = 6;
  if (has_switch_()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->switch_(), output);
  }

  // double scalar = 7;
  if (has_scalar()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->scalar(), output);
  }

  // .indoors.pipeline.protocol.Clock clock = 8;
  if (has_clock()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_clock(), output);
  }

  // .indoors.pipeline.protocol.Vector3 vector3 = 9;
  if (has_vector3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_vector3(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:indoors.pipeline.protocol.Event)
}

::google::protobuf::uint8* Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:indoors.pipeline.protocol.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double t = 1;
  if (this->t() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->t(), target);
  }

  // uint32 channel = 2;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->channel(), target);
  }

  // .indoors.pipeline.protocol.Hello hello = 3;
  if (has_hello()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_hello(), deterministic, target);
  }

  // .indoors.pipeline.protocol.Bye bye = 4;
  if (has_bye()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_bye(), deterministic, target);
  }

  // .indoors.pipeline.protocol.Void void = 5;
  if (has_void_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_void_(), deterministic, target);
  }

  // bool switch = 6;
  if (has_switch_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->switch_(), target);
  }

  // double scalar = 7;
  if (has_scalar()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->scalar(), target);
  }

  // .indoors.pipeline.protocol.Clock clock = 8;
  if (has_clock()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_clock(), deterministic, target);
  }

  // .indoors.pipeline.protocol.Vector3 vector3 = 9;
  if (has_vector3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_vector3(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:indoors.pipeline.protocol.Event)
  return target;
}

size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:indoors.pipeline.protocol.Event)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double t = 1;
  if (this->t() != 0) {
    total_size += 1 + 8;
  }

  // uint32 channel = 2;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel());
  }

  switch (__case()) {
    // .indoors.pipeline.protocol.Hello hello = 3;
    case kHello: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *__.hello_);
      break;
    }
    // .indoors.pipeline.protocol.Bye bye = 4;
    case kBye: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *__.bye_);
      break;
    }
    // .indoors.pipeline.protocol.Void void = 5;
    case kVoid: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *__.void__);
      break;
    }
    // bool switch = 6;
    case kSwitch: {
      total_size += 1 + 1;
      break;
    }
    // double scalar = 7;
    case kScalar: {
      total_size += 1 + 8;
      break;
    }
    // .indoors.pipeline.protocol.Clock clock = 8;
    case kClock: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *__.clock_);
      break;
    }
    // .indoors.pipeline.protocol.Vector3 vector3 = 9;
    case kVector3: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *__.vector3_);
      break;
    }
    case __NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:indoors.pipeline.protocol.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:indoors.pipeline.protocol.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:indoors.pipeline.protocol.Event)
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:indoors.pipeline.protocol.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.t() != 0) {
    set_t(from.t());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  switch (from.__case()) {
    case kHello: {
      mutable_hello()->::indoors::pipeline::protocol::Hello::MergeFrom(from.hello());
      break;
    }
    case kBye: {
      mutable_bye()->::indoors::pipeline::protocol::Bye::MergeFrom(from.bye());
      break;
    }
    case kVoid: {
      mutable_void_()->::indoors::pipeline::protocol::Void::MergeFrom(from.void_());
      break;
    }
    case kSwitch: {
      set_switch_(from.switch_());
      break;
    }
    case kScalar: {
      set_scalar(from.scalar());
      break;
    }
    case kClock: {
      mutable_clock()->::indoors::pipeline::protocol::Clock::MergeFrom(from.clock());
      break;
    }
    case kVector3: {
      mutable_vector3()->::indoors::pipeline::protocol::Vector3::MergeFrom(from.vector3());
      break;
    }
    case __NOT_SET: {
      break;
    }
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:indoors.pipeline.protocol.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:indoors.pipeline.protocol.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  using std::swap;
  swap(t_, other->t_);
  swap(channel_, other->channel_);
  swap(__, other->__);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Void::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Void::Void()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::scc_info_Void.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:indoors.pipeline.protocol.Void)
}
Void::Void(const Void& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:indoors.pipeline.protocol.Void)
}

void Void::SharedCtor() {
}

Void::~Void() {
  // @@protoc_insertion_point(destructor:indoors.pipeline.protocol.Void)
  SharedDtor();
}

void Void::SharedDtor() {
}

void Void::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Void::descriptor() {
  ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Void& Void::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::scc_info_Void.base);
  return *internal_default_instance();
}


void Void::Clear() {
// @@protoc_insertion_point(message_clear_start:indoors.pipeline.protocol.Void)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Void::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:indoors.pipeline.protocol.Void)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:indoors.pipeline.protocol.Void)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:indoors.pipeline.protocol.Void)
  return false;
#undef DO_
}

void Void::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:indoors.pipeline.protocol.Void)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:indoors.pipeline.protocol.Void)
}

::google::protobuf::uint8* Void::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:indoors.pipeline.protocol.Void)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:indoors.pipeline.protocol.Void)
  return target;
}

size_t Void::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:indoors.pipeline.protocol.Void)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Void::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:indoors.pipeline.protocol.Void)
  GOOGLE_DCHECK_NE(&from, this);
  const Void* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Void>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:indoors.pipeline.protocol.Void)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:indoors.pipeline.protocol.Void)
    MergeFrom(*source);
  }
}

void Void::MergeFrom(const Void& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:indoors.pipeline.protocol.Void)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Void::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:indoors.pipeline.protocol.Void)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Void::CopyFrom(const Void& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:indoors.pipeline.protocol.Void)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Void::IsInitialized() const {
  return true;
}

void Void::Swap(Void* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Void::InternalSwap(Void* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Void::GetMetadata() const {
  protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Clock::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Clock::kUnixUtcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Clock::Clock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::scc_info_Clock.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:indoors.pipeline.protocol.Clock)
}
Clock::Clock(const Clock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unix_utc_ = from.unix_utc_;
  // @@protoc_insertion_point(copy_constructor:indoors.pipeline.protocol.Clock)
}

void Clock::SharedCtor() {
  unix_utc_ = 0;
}

Clock::~Clock() {
  // @@protoc_insertion_point(destructor:indoors.pipeline.protocol.Clock)
  SharedDtor();
}

void Clock::SharedDtor() {
}

void Clock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Clock::descriptor() {
  ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Clock& Clock::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::scc_info_Clock.base);
  return *internal_default_instance();
}


void Clock::Clear() {
// @@protoc_insertion_point(message_clear_start:indoors.pipeline.protocol.Clock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unix_utc_ = 0;
  _internal_metadata_.Clear();
}

bool Clock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:indoors.pipeline.protocol.Clock)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double unix_utc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &unix_utc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:indoors.pipeline.protocol.Clock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:indoors.pipeline.protocol.Clock)
  return false;
#undef DO_
}

void Clock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:indoors.pipeline.protocol.Clock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double unix_utc = 1;
  if (this->unix_utc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->unix_utc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:indoors.pipeline.protocol.Clock)
}

::google::protobuf::uint8* Clock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:indoors.pipeline.protocol.Clock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double unix_utc = 1;
  if (this->unix_utc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->unix_utc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:indoors.pipeline.protocol.Clock)
  return target;
}

size_t Clock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:indoors.pipeline.protocol.Clock)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double unix_utc = 1;
  if (this->unix_utc() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Clock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:indoors.pipeline.protocol.Clock)
  GOOGLE_DCHECK_NE(&from, this);
  const Clock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Clock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:indoors.pipeline.protocol.Clock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:indoors.pipeline.protocol.Clock)
    MergeFrom(*source);
  }
}

void Clock::MergeFrom(const Clock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:indoors.pipeline.protocol.Clock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.unix_utc() != 0) {
    set_unix_utc(from.unix_utc());
  }
}

void Clock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:indoors.pipeline.protocol.Clock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Clock::CopyFrom(const Clock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:indoors.pipeline.protocol.Clock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Clock::IsInitialized() const {
  return true;
}

void Clock::Swap(Clock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Clock::InternalSwap(Clock* other) {
  using std::swap;
  swap(unix_utc_, other->unix_utc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Clock::GetMetadata() const {
  protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vector3::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector3::kXFieldNumber;
const int Vector3::kYFieldNumber;
const int Vector3::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector3::Vector3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::scc_info_Vector3.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:indoors.pipeline.protocol.Vector3)
}
Vector3::Vector3(const Vector3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:indoors.pipeline.protocol.Vector3)
}

void Vector3::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Vector3::~Vector3() {
  // @@protoc_insertion_point(destructor:indoors.pipeline.protocol.Vector3)
  SharedDtor();
}

void Vector3::SharedDtor() {
}

void Vector3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vector3::descriptor() {
  ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector3& Vector3::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::scc_info_Vector3.base);
  return *internal_default_instance();
}


void Vector3::Clear() {
// @@protoc_insertion_point(message_clear_start:indoors.pipeline.protocol.Vector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Vector3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:indoors.pipeline.protocol.Vector3)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:indoors.pipeline.protocol.Vector3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:indoors.pipeline.protocol.Vector3)
  return false;
#undef DO_
}

void Vector3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:indoors.pipeline.protocol.Vector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:indoors.pipeline.protocol.Vector3)
}

::google::protobuf::uint8* Vector3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:indoors.pipeline.protocol.Vector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:indoors.pipeline.protocol.Vector3)
  return target;
}

size_t Vector3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:indoors.pipeline.protocol.Vector3)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vector3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:indoors.pipeline.protocol.Vector3)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:indoors.pipeline.protocol.Vector3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:indoors.pipeline.protocol.Vector3)
    MergeFrom(*source);
  }
}

void Vector3::MergeFrom(const Vector3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:indoors.pipeline.protocol.Vector3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Vector3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:indoors.pipeline.protocol.Vector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector3::CopyFrom(const Vector3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:indoors.pipeline.protocol.Vector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector3::IsInitialized() const {
  return true;
}

void Vector3::Swap(Vector3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector3::InternalSwap(Vector3* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vector3::GetMetadata() const {
  protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_indoors_2fpipeline_2fprotocol_2fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
}  // namespace pipeline
}  // namespace indoors
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::indoors::pipeline::protocol::Hello* Arena::CreateMaybeMessage< ::indoors::pipeline::protocol::Hello >(Arena* arena) {
  return Arena::CreateInternal< ::indoors::pipeline::protocol::Hello >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::indoors::pipeline::protocol::Bye* Arena::CreateMaybeMessage< ::indoors::pipeline::protocol::Bye >(Arena* arena) {
  return Arena::CreateInternal< ::indoors::pipeline::protocol::Bye >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::indoors::pipeline::protocol::ChannelHello* Arena::CreateMaybeMessage< ::indoors::pipeline::protocol::ChannelHello >(Arena* arena) {
  return Arena::CreateInternal< ::indoors::pipeline::protocol::ChannelHello >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::indoors::pipeline::protocol::Event* Arena::CreateMaybeMessage< ::indoors::pipeline::protocol::Event >(Arena* arena) {
  return Arena::CreateInternal< ::indoors::pipeline::protocol::Event >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::indoors::pipeline::protocol::Void* Arena::CreateMaybeMessage< ::indoors::pipeline::protocol::Void >(Arena* arena) {
  return Arena::CreateInternal< ::indoors::pipeline::protocol::Void >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::indoors::pipeline::protocol::Clock* Arena::CreateMaybeMessage< ::indoors::pipeline::protocol::Clock >(Arena* arena) {
  return Arena::CreateInternal< ::indoors::pipeline::protocol::Clock >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::indoors::pipeline::protocol::Vector3* Arena::CreateMaybeMessage< ::indoors::pipeline::protocol::Vector3 >(Arena* arena) {
  return Arena::CreateInternal< ::indoors::pipeline::protocol::Vector3 >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
